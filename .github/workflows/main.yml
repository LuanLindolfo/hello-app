name: CI/CD Docker e Pull Request

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]  # Adicionado para suportar PRs

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do Código da Aplicação
        uses: actions/checkout@v4
      
      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Construir e Publicar a Imagem Docker
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}  # Não push em PRs
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/hello-app:latest,${{ secrets.DOCKER_USERNAME }}/hello-app:${{ github.sha }}
          cache-from: type=gha  # Cache para builds rápidas
          cache-to: type=gha,mode=max
      
      - name: Debug SSH Key (Temporário - Remova Após Testar)
        if: github.event_name == 'push'
        run: |
          KEY_CONTENT="${{ secrets.SSH_PRIVATE_KEY }}"
          if [ -z "$KEY_CONTENT" ]; then
            echo "ERRO: SSH_PRIVATE_KEY vazio!"
            exit 1
          fi
          echo "Tamanho da chave: $(echo "$KEY_CONTENT" | wc -c) caracteres"
          echo "$KEY_CONTENT" | head -1 | grep -q "BEGIN.*PRIVATE KEY"
          if [ $? -ne 0 ]; then
            echo "ERRO: Formato inválido!"
            exit 1
          fi
          echo "Chave OK."
      
      - name: Configurar SSH
        if: github.event_name == 'push'
        uses: webfactory/ssh-agent@v0.9.0  # Atualizado para versão estável
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh-options: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'  # Evita prompts de host
      
      - name: Checkout do Repositório de Manifestos
        if: github.event_name == 'push'
        uses: actions/checkout@v4
        with:
          repository: 'LuanLindolfo/hello-manifests'
          path: manifests
          persist-credentials: false
          token: ${{ secrets.GITHUB_TOKEN }}  # Para fetch seguro
      
      - name: Atualizar a Tag da Imagem no Arquivo de Manifestos
        if: github.event_name == 'push'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          if [ -z "$DOCKER_USERNAME" ]; then
            echo "ERRO: DOCKER_USERNAME vazio!"
            exit 1
          fi
          TAG_NAME="${DOCKER_USERNAME}/hello-app:${GITHUB_SHA}"
          sed -i "s|image: .*|image: ${TAG_NAME}|g" ./manifests/deployment.yaml
        working-directory: .
      
      - name: Commit e Push das Alterações
        if: github.event_name == 'push'
        working-directory: ./manifests  # CORREÇÃO: Roda no repo de manifests
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          # CORREÇÃO: Configura remote para o repo correto via SSH
          git remote set-url origin git@github.com:LuanLindolfo/hello-manifests.git
          git add deployment.yaml
          if git diff --staged --quiet; then
            echo "Nenhuma mudança para commitar."
          else
            git commit -m "Update hello-app image to ${GITHUB_SHA} [skip ci]"  # Evita loop
            git push origin main  # Assume branch 'main'; ajuste se necessário
          fi
